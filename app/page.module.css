/* General Styling & Variables */
:root {
  --max-width: 800px;
  /* A good starting point, adjust as needed */
  --border-radius: 8px;
  /* Consistent rounded corners */
  /* ... other color and font variables as needed */
}

body {
  font-family: var(--font-sans);
  /* Set a default font for the entire body */
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  /* Use rem for better responsiveness */
  min-height: 100vh;
}


/* Description Section */
.description {
  display: flex;
  /* Flexbox for easier layout */
  flex-direction: column;
  /* Stack items vertically by default */
  align-items: center;
  font-size: 0.85rem;
  max-width: var(--max-width);
  width: 100%;
  z-index: 2;
  font-family: var(--font-mono);
  text-align: center;
  /* Center text within description */
}

.description a {
  display: inline-flex;
  /* Inline-flex for links within text */
  align-items: center;
  gap: 0.5rem;
}

.description p {
  margin: 1rem 0;
  /* Add some space around paragraphs */
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border-radius: var(--border-radius);
}


/* Grid & Cards */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  /* Responsive columns */
  gap: 1rem;
  /* Add spacing between cards */
  max-width: var(--max-width);
  width: 100%;
}

.card {
  padding: 1.5rem;
  /* Increase padding for better readability */
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  transition: background 200ms, border 200ms;
}

/* ... (rest of your card styles) ... */

/* Center Section */
.center {
  display: grid;
  /* Use grid for more control over pseudo-element placement */
  place-items: center;
  /* Center content horizontally & vertically */
  position: relative;
  padding: 4rem 0;
}

.center::before,
.center::after {
  content: "";
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 480px;
  height: 360px;
  inset-block-start: -10%;
  /* Adjust placement using inset */
  inset-inline-start: -40%;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
  inset-block-start: 50%;
  inset-inline-start: -15%;
}

/* Logos */
.logo {
  position: relative;
  /* Ensure proper positioning for potential effects */
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}


/* Media Queries */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    cursor: pointer;
    /* Indicate interactivity on hover */
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

@media (max-width: 700px) {
  .main {
    padding: 3rem;
  }

  .grid {
    gap: 0.75rem;
  }

  .card {
    padding: 1rem 1.5rem;
  }

  .description {
    font-size: 0.75rem;
  }
}

@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1121px) {

}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }

  to {
    transform: rotate(0deg);
  }
}